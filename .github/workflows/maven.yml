# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-dev:

    runs-on: ubuntu-latest
    environment:
      name: dev

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B compile --file pom.xml
      
  build-hmg:
    runs-on: ubuntu-latest
    environment:
      name: hmg
    needs: build-dev
    steps:
    - name: Realiza o checkout do reposit칩rio
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Configura o JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Testa o projeto com Maven
      run: mvn -B test --file pom.xml

  build-prd:
    runs-on: ubuntu-latest
    environment:
      name: prd
    needs: build-hmg
    steps:
    - name: Realiza o checkout do reposit칩rio
      uses: actions/checkout@v3
    - name: Configura o JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Empacota o projeto com Maven
      run: mvn -B package --file pom.xml -DskipTests
    # Cria o artefato de download
    - name: Crie uma pasta tempor치ria de downloads de artefatos
      run: mkdir staging
    - name: Copia os artefatos a serem publicados na pasta tempor치ria
      run: cp target/*jar-with-dependencies.jar staging
    - name: Usa Upload Artifact do GitHub Action
      uses: actions/upload-artifact@v2
      with:
        name: Package
        path: staging
